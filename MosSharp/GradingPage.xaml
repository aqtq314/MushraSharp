<local:PageWithNext x:Class="MosSharp.GradingPage"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:local="clr-namespace:MosSharp"
                    xmlns:c="clr-namespace:CommonKit;assembly=CommonKit"
                    mc:Ignorable="d"
                    d:DesignWidth="800" d:DesignHeight="400"
                    d:DataContext="{x:Static local:MasterVM.DesignerGradePageVM}"
                    Title="GradingPage" Loaded="OnPageLoaded" Unloaded="OnPageUnloaded">
  <FrameworkElement.Resources>
    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type RadioButton}"/>
  </FrameworkElement.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition MinHeight="200"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
      <TextBlock>
        <Run Text="{DynamicResource S.GradePage.Title}"/>
        -
        <Run Text="{Binding PageIndexOneBased, RelativeSource={RelativeSource AncestorType={x:Type local:GradingPage}}, Mode=OneTime, FallbackValue=1}"/>
        /
        <Run Text="{Binding PageCount, RelativeSource={RelativeSource AncestorType={x:Type local:GradingPage}}, Mode=OneTime, FallbackValue=0}"/>
      </TextBlock>
    </StackPanel>
    <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
      <Grid Grid.IsSharedSizeScope="True">
        <ItemsControl ItemsSource="{Binding GradeItems}" Margin="10">
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <Grid Margin="5">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" SharedSizeGroup="GradeItemIndex"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Margin="5" HorizontalAlignment="Right" VerticalAlignment="Center">
                  #<Run Text="{Binding IndexOneBased, Mode=OneTime}"/>
                  /
                  <Run Text="{Binding AudioItemCount, RelativeSource={RelativeSource AncestorType={x:Type local:GradingPage}}, Mode=OneTime, FallbackValue=0}"/>
                </TextBlock>
                <ListBox x:Name="gradeListBox" Grid.Column="1" ItemsSource="{x:Static local:GradeItemVM.MosGrades}"
                       SelectedItem="{Binding Grade, Mode=TwoWay, Converter={x:Static local:GradeItemVM.MosValueToSelectedItemConverter}}"
                       Margin="5" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                       ScrollViewer.CanContentScroll="False">
                  <Control.Template>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                      <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                      </Border>
                    </ControlTemplate>
                  </Control.Template>
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto"/>
                          <ColumnDefinition/>
                          <ColumnDefinition/>
                          <ColumnDefinition/>
                          <ColumnDefinition/>
                          <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                      </Grid>
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                  <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                      <Setter Property="Width" Value="40"/>
                      <Setter Property="Height" Value="40"/>
                      <Setter Property="Grid.Column" Value="{Binding}"/>
                      <Setter Property="Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0.5">
                              <ContentPresenter x:Name="presenter" Opacity="0.4" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                              <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" TargetName="presenter" Value="1"/>
                                <Setter Property="Background" TargetName="Bd" Value="#1F26A0DA"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#a826A0Da"/>
                              </Trigger>
                              <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Opacity" TargetName="presenter" Value="1"/>
                                <Setter Property="Background" TargetName="Bd" Value="#3D26A0DA"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </ItemsControl.ItemContainerStyle>
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <TextBlock x:Name="gradeItemText" Text="{Binding}" FontSize="20"/>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ListBox>
                <DockPanel Grid.Column="2" Margin="5" VerticalAlignment="Center">
                  <TextBlock VerticalAlignment="Center" Margin="3 0"
                           Text="{Binding ElementName=timelineSlider, Path=Value, Converter={x:Static c:Converters.SecondsToTimespanConverter}, StringFormat='mm\\:ss'}"/>
                  <ToggleButton x:Name="loopButton" Width="25" Padding="0 2" Content="↻" ToolTip="{DynamicResource S.GradePage.Op.Loop}"
                              IsChecked="True"/>
                  <ToggleButton x:Name="playButton" Width="25" Padding="0 2" Content="⏵︎" ToolTip="{DynamicResource S.GradePage.Op.Play}"
                              Checked="OnPlayButtonChecked" Unchecked="OnPlayButtonUnchecked"/>
                  <Slider Name="timelineSlider" Margin="5" LargeChange="1" SmallChange="0.1" Maximum="1"
                        VerticalAlignment="Center" IsMoveToPointEnabled="True" ValueChanged="OnTimelineSliderValueChanged"/>
                </DockPanel>
              </Grid>
              <DataTemplate.Triggers>
                <!--<Trigger SourceName="gradeListBox" Property="SelectedItem" Value="{x:Null}">
                  <Setter TargetName="gradeListBox" Property="BorderBrush" Value="Red"/>
                </Trigger>-->
                <Trigger SourceName="playButton" Property="IsChecked" Value="True">
                  <Setter TargetName="playButton" Property="Content" Value="⏸︎"/>
                  <Setter TargetName="playButton" Property="ToolTip" Value="{DynamicResource S.GradePage.Op.Pause}"/>
                </Trigger>
              </DataTemplate.Triggers>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </Grid>
    </ScrollViewer>
    <DockPanel Grid.Row="2" Margin="5">
      <Button Content="{DynamicResource S.Nav.Op.PrevPage}" Margin="5" Padding="30 5" Click="OnPrevPageButtonClicked"/>
      <Button Content="{DynamicResource S.Nav.Op.NextPage}" Margin="5" Padding="30 5" Click="OnNextGradingPageButtonClicked"/>
    </DockPanel>
  </Grid>
</local:PageWithNext>
